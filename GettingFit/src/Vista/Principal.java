package Vista;

import Modelo.Conexion;
import Vista.Cursos.CrearCurso;
import Vista.Cursos.ListadoCursos;
import Vista.Profesores.CrearProfesor;
import Vista.Profesores.ListadoProfesores;
import java.awt.Image;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class Principal extends javax.swing.JFrame {
    
    //private Dimension dim;
    
    /**
     * Creates new form NewJFrame
     */
    public Principal() {
        initComponents();
        /*Redimensaionamos el JFrame al tamaño del monitor*/ 
        //dim = super.getToolkit().getScreenSize();
        //super.setSize(dim);
        /*Ajustamos la imagen de la portada al tamaño del JFrame*/
        ImageIcon imagen = new ImageIcon("src/Imagenes/DontGiveUp.jpg");
        Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_DEFAULT));
        jLabel1.setIcon(icono);
        this.repaint();
        /*Se establece el título de la ventana y se centra la misma en la pantalla*/
        this.setTitle("Gimnasio Getting Fit");    
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        MenuPrincipal = new javax.swing.JMenuBar();
        MenuSocios = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        MenuSociosEditar = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        MenuProfesores = new javax.swing.JMenu();
        MenuProfesoresListado = new javax.swing.JMenuItem();
        MenuProfesoresAnadir = new javax.swing.JMenuItem();
        MenuProfesoresBorrar = new javax.swing.JMenuItem();
        MenuCursos = new javax.swing.JMenu();
        MenuCursosListado = new javax.swing.JMenuItem();
        MenuCursosAnadir = new javax.swing.JMenuItem();
        MenuCursosBorrar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/Sofia/Desktop/GIMNASIO/GettingFit/src/Imagenes/DontGiveUp.jpg")); // NOI18N

        MenuSocios.setText("Socios");

        jMenuItem1.setText("Añadir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        MenuSocios.add(jMenuItem1);

        MenuSociosEditar.setText("Editar");
        MenuSociosEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSociosEditarActionPerformed(evt);
            }
        });
        MenuSocios.add(MenuSociosEditar);

        jMenuItem3.setText("Borrar");
        MenuSocios.add(jMenuItem3);

        MenuPrincipal.add(MenuSocios);

        MenuProfesores.setText("Personal");

        MenuProfesoresListado.setText("Listado de profesores");
        MenuProfesoresListado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuProfesoresListadoActionPerformed(evt);
            }
        });
        MenuProfesores.add(MenuProfesoresListado);

        MenuProfesoresAnadir.setText("Añadir");
        MenuProfesoresAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuProfesoresAnadirActionPerformed(evt);
            }
        });
        MenuProfesores.add(MenuProfesoresAnadir);

        MenuProfesoresBorrar.setText("Borrar");
        MenuProfesoresBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuProfesoresBorrarActionPerformed(evt);
            }
        });
        MenuProfesores.add(MenuProfesoresBorrar);

        MenuPrincipal.add(MenuProfesores);

        MenuCursos.setText("Cursos");

        MenuCursosListado.setText("Listado de cursos");
        MenuCursosListado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCursosListadoActionPerformed(evt);
            }
        });
        MenuCursos.add(MenuCursosListado);

        MenuCursosAnadir.setText("Añadir");
        MenuCursosAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCursosAnadirActionPerformed(evt);
            }
        });
        MenuCursos.add(MenuCursosAnadir);

        MenuCursosBorrar.setText("Borrar");
        MenuCursos.add(MenuCursosBorrar);

        MenuPrincipal.add(MenuCursos);

        setJMenuBar(MenuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void MenuSociosEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSociosEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuSociosEditarActionPerformed

    private void MenuCursosListadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCursosListadoActionPerformed
        /*Se instancia la clase PantallaSecundaria*/
        ListadoCursos listadoCursos = new ListadoCursos(this, true);
        /*Se aplica el método setVisible para que al seleccionar el botón añadir del menú se abra
        el diálogo que nos permitirá permitirá añadir cursos a la aplicación*/
        listadoCursos.setVisible(true);
    }//GEN-LAST:event_MenuCursosListadoActionPerformed

    private void MenuProfesoresListadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuProfesoresListadoActionPerformed
        /*Se instancia la clase PantallaSecundaria*/
        ListadoProfesores listadoProfesores = new ListadoProfesores(this, true);
        /*Se aplica el método setVisible para que al seleccionar el botón añadir del menú se abra
        el diálogo que nos permitirá permitirá añadir profesores a la aplicación*/
        listadoProfesores.setVisible(true);
        
    }//GEN-LAST:event_MenuProfesoresListadoActionPerformed

    private void MenuProfesoresAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuProfesoresAnadirActionPerformed
        /*Se instancia la clase CrearProfesor*/
        CrearProfesor creaProfesor = new CrearProfesor(this, true);
        /*Se aplica el método setVisible para que al seleccionar el botón añadir del menú se abra
        el diálogo que nos permitirá añadir profesores a la aplicación*/
        creaProfesor.setVisible(true);
    }//GEN-LAST:event_MenuProfesoresAnadirActionPerformed

    private void MenuProfesoresBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuProfesoresBorrarActionPerformed
        /*Al seleccionar este elemento del menú hacemos aparecer un JOptionPane que nos pedirá introducir el Dni del
        usuario a eliminar. Se comprobará que exista dicho dni en base de datos y en caso afirmativo, se eliminará*/
        String dni = JOptionPane.showInputDialog(null, "Escriba el dni del usuario que desee eliminar");
        int respuesta = JOptionPane.showConfirmDialog(null, "¿Está seguro?", null, JOptionPane.YES_NO_OPTION);
        
        if(respuesta == 0)
        {
            try 
            {
                /*Abrimos conexión con la base de datos*/
                Connection conexion = Conexion.conexionPostgresql();
                Statement sentencia = conexion.createStatement();
                /*Comprobamos que el Dni introducido exista en la base de datos*/
                ResultSet dnis_profesores_bd = conexion.createStatement().executeQuery("select Dni from Profesores");
                ArrayList<String> array_dnis = new ArrayList<String>();
                while(dnis_profesores_bd.next())
                {
                    String columna_dni_bd = dnis_profesores_bd.getString(1);
                    array_dnis.add(columna_dni_bd);                
                }
                if(array_dnis.contains(dni))
                {
                    /*Si existe, eliminamos al usuario de la base de datos*/
                    sentencia.executeUpdate("delete from Profesores where Dni = '" + dni + "';"); 
                    JOptionPane.showMessageDialog(null, "Operación realizada correctamente");
                }
                else
                {
                    /*Mostramos mensaje de error*/
                    JOptionPane.showMessageDialog(null, "No existe en el sistema un usuario dado de alta con ese dni", null, JOptionPane.ERROR_MESSAGE);
                    return;
                }           
                /*Cerramos conexión con la base de datos*/
                conexion.close();
            } catch (SQLException ex) 
            {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
        else
        {
            /*Volvemos a mostrar la pantalla de inicio*/
            new Principal().setVisible(true);
        }        
    }//GEN-LAST:event_MenuProfesoresBorrarActionPerformed

    private void MenuCursosAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCursosAnadirActionPerformed
        /*Se instancia la clase CrearCurso*/
        CrearCurso creaCurso = new CrearCurso(this, true);
        /*Se aplica el método setVisible para que al seleccionar el botón añadir del menú se abra
        el diálogo que nos permitirá añadir cursos a la aplicación*/
        creaCurso.setVisible(true);
        
    }//GEN-LAST:event_MenuCursosAnadirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuCursos;
    private javax.swing.JMenuItem MenuCursosAnadir;
    private javax.swing.JMenuItem MenuCursosBorrar;
    private javax.swing.JMenuItem MenuCursosListado;
    private javax.swing.JMenuBar MenuPrincipal;
    private javax.swing.JMenu MenuProfesores;
    private javax.swing.JMenuItem MenuProfesoresAnadir;
    private javax.swing.JMenuItem MenuProfesoresBorrar;
    private javax.swing.JMenuItem MenuProfesoresListado;
    private javax.swing.JMenu MenuSocios;
    private javax.swing.JMenuItem MenuSociosEditar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    // End of variables declaration//GEN-END:variables
}
