/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Cursos;

import Modelo.Conexion;
import Vista.Principal;
import java.awt.Frame;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Sofia
 */
public class ListadoCursos extends javax.swing.JDialog {

        /*Se crea una variable para hacer la conexión con la pantalla Principal*/
    private Principal principal;
    private TableRowSorter trsFiltro;
    private CrearCurso crearCurso;
//    private DetalleProfesor detalleProfesor;
    
    /**
     * Creates new form ListadoCursos
     */
    public ListadoCursos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        /*Se hace la conexión con la pantalla Principal*/
        principal = (Principal)parent;
        initComponents();
        /*Centramos la ventana del diálogo ListadoCursos*/
        this.setLocationRelativeTo(null);
        /*Cargamos la tabla con los datos de cursos*/
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelCursos = new javax.swing.JLabel();
        TablaCursos = new javax.swing.JScrollPane();
        jTableCursos = new javax.swing.JTable();
        BotoneraInferior = new javax.swing.JPanel();
        BotonEliminarCurso = new javax.swing.JButton();
        BotonVolver = new javax.swing.JButton();
        BotonAnadirCurso = new javax.swing.JButton();
        Buscador = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textoBusqueda = new javax.swing.JTextField();
        comboBusqueda = new javax.swing.JComboBox<>();
        BotonDetalleCurso = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabelCursos.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabelCursos.setText("LISTADO DE CURSOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addComponent(jLabelCursos)
                .addContainerGap(354, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelCursos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 30));

        jTableCursos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTableCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TablaCursos.setViewportView(jTableCursos);

        getContentPane().add(TablaCursos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 810, 240));

        BotonEliminarCurso.setText("Eliminar");
        BotonEliminarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminarCursoActionPerformed(evt);
            }
        });

        BotonVolver.setText("Volver");
        BotonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVolverActionPerformed(evt);
            }
        });

        BotonAnadirCurso.setText("Añadir");
        BotonAnadirCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAnadirCursoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BotoneraInferiorLayout = new javax.swing.GroupLayout(BotoneraInferior);
        BotoneraInferior.setLayout(BotoneraInferiorLayout);
        BotoneraInferiorLayout.setHorizontalGroup(
            BotoneraInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotoneraInferiorLayout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addComponent(BotonAnadirCurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonEliminarCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonVolver)
                .addContainerGap())
        );
        BotoneraInferiorLayout.setVerticalGroup(
            BotoneraInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotoneraInferiorLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(BotoneraInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonVolver)
                    .addComponent(BotonEliminarCurso)
                    .addComponent(BotonAnadirCurso)))
        );

        getContentPane().add(BotoneraInferior, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 380, 380, 40));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setText("Buscar por:");

        textoBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoBusquedaKeyTyped(evt);
            }
        });

        comboBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Nivel" }));

        BotonDetalleCurso.setText("Detalle");
        BotonDetalleCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonDetalleCursoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BuscadorLayout = new javax.swing.GroupLayout(Buscador);
        Buscador.setLayout(BuscadorLayout);
        BuscadorLayout.setHorizontalGroup(
            BuscadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuscadorLayout.createSequentialGroup()
                .addContainerGap(280, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(textoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonDetalleCurso)
                .addGap(14, 14, 14))
        );
        BuscadorLayout.setVerticalGroup(
            BuscadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BuscadorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BuscadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(comboBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonDetalleCurso))
                .addContainerGap())
        );

        getContentPane().add(Buscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 820, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonEliminarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminarCursoActionPerformed
//        try
//        {
//            /*Seleccionamos el Dni del registro a eliminar*/
//            int fila_seleccionada = (jTableCursos.getSelectedRow());
//            DefaultTableModel modelo = (DefaultTableModel) jTableCursos.getModel();
//            String dni = (String) modelo.getValueAt(fila_seleccionada, 0);
//            /*Abrimos conexión con la base de datos*/
//            Connection conexion = Conexion.conexionPostgresql();
//            /*Consulta a base de datos*/
//            Statement sentencia = conexion.createStatement();
//            sentencia.executeUpdate("delete from Profesores where dni = '" + dni + "';");
//            /*Cerramos la conexion*/
//            sentencia.close();
//            conexion.close();
//            /*Recargamos la tabla*/
//            cargarTabla();
//        }
//        catch (SQLException ex)
//        {
//            Logger.getLogger(ListadoProfesores.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_BotonEliminarCursoActionPerformed

    private void BotonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVolverActionPerformed
        /*Programamos la acción de volver a la ventana anterior*/
        this.setVisible(false);
        new Principal().setVisible(true);
    }//GEN-LAST:event_BotonVolverActionPerformed

    private void BotonAnadirCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAnadirCursoActionPerformed
        try
        {
            Frame ListadoCursos = null;
            crearCurso = new CrearCurso(ListadoCursos, true);
            crearCurso.setVisible(true);
            cargarTabla();
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_BotonAnadirCursoActionPerformed

    private void textoBusquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoBusquedaKeyTyped
        textoBusqueda.addKeyListener(new KeyAdapter()
            {
                public void keyReleased(final KeyEvent e)
                {
                    String cadenaBusqueda = textoBusqueda.getText();
                    textoBusqueda.setText(cadenaBusqueda);
                    repaint();
                    filtro();
                }
            });
            trsFiltro = new TableRowSorter(jTableCursos.getModel());
            jTableCursos.setRowSorter(trsFiltro);
    }//GEN-LAST:event_textoBusquedaKeyTyped

    private void BotonDetalleCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonDetalleCursoActionPerformed
//        try
//        {
//            /*Almacenamos el elemento seleccionado de la tabla*/
//            int fila_seleccionada = (jTableCursos.getSelectedRow());
//            DefaultTableModel modelo = (DefaultTableModel) jTableCursos.getModel();
//            String dni = (String) modelo.getValueAt(fila_seleccionada, 0);
//            /*Abrimos conexión con la base de datos*/
//            Connection conexion = Conexion.conexionPostgresql();
//            /*Extraemos la información relativa a ese registro*/
//            Statement sentencia = conexion.createStatement();
//            ResultSet info_profesor = sentencia.executeQuery("select * from Profesores where dni = '" + dni + "';");
//            /*Creamos las variables donde almacenaremos la información*/
//            String nombre = null;
//            String apellido1 = null;
//            String apellido2 = null;
//            String sexo = null;
//            int telefono = 0;
//            String direccion = null;
//            Date fechaNacimiento = null;
//            Date fechaAlta = null;
//            Date fechaBaja = null;
//            while(info_profesor.next())
//            {
//                nombre = info_profesor.getString(2);
//                apellido1 = info_profesor.getString(3);
//                apellido2 = info_profesor.getString(4);
//                sexo = info_profesor.getString(7);
//                telefono = info_profesor.getInt(8);
//                direccion = info_profesor.getString(9);
//                fechaNacimiento = info_profesor.getDate(6);
//                fechaAlta = info_profesor.getDate(10);
//                fechaBaja = info_profesor.getDate(11);
//            }
//            /*Almacenamos la información en un array*/
//            //Array informacion_profesor = new Array();
//            Frame ListadoProfesores = null;
//            detalleProfesor = new DetalleProfesor(ListadoProfesores, true, dni, nombre, apellido1, apellido2, sexo, telefono,
//                direccion, fechaNacimiento, fechaAlta, fechaBaja);
//            detalleProfesor.setVisible(true);
//
//        }
//        catch(Exception ex)
//        {
//            ex.printStackTrace();
//        }

    }//GEN-LAST:event_BotonDetalleCursoActionPerformed

    /*Método que permite ver que elemento del combo esta seleccionado*/
    public void filtro() 
    {
        int columnaABuscar = 0;
        if (comboBusqueda.getSelectedItem() == "Nivel" || comboBusqueda.getSelectedItem() == "nivel") 
        {
            columnaABuscar = 3;
        }
        if (comboBusqueda.getSelectedItem().toString() == "Nombre" || comboBusqueda.getSelectedItem().toString() == "nombre") 
        {
            columnaABuscar = 1;
        }
        trsFiltro.setRowFilter(RowFilter.regexFilter(textoBusqueda.getText(), columnaABuscar));
    }
    
    /*Método que nos permite mostrar la información de la tabla Profesores de la base de datos*/
    public void cargarTabla()
    {
        try
        {
            /*Conexión a base de datos*/
            Connection conexion = Conexion.conexionPostgresql();
            /*Definimos la tabla donde insertaremos los datos de la base de datos*/
            DefaultTableModel modelo = new DefaultTableModel();
            this.jTableCursos.setModel(modelo);
            /*Consulta a base de datos*/
            Statement sentencia = conexion.createStatement();
            ResultSet cursos = sentencia.executeQuery("select nombre, descripcion, nivel, precio, fechaAlta,fechaBaja from Cursos");
            /*Cabeceras de la tabla*/
            configuraColumnasTabla(cursos, modelo);
            /*Datos de la tabla*/
            anadeDatosTabla(cursos, modelo);
            /*Cerramos la conexion*/
            sentencia.close();
            conexion.close();
        }
        catch (SQLException ex) 
        {
            Logger.getLogger(ListadoCursos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static void configuraColumnasTabla(ResultSet rs, DefaultTableModel model)
    {
        try
        {
            ResultSetMetaData metadatos = rs.getMetaData();
            int numero_columnas = metadatos.getColumnCount();
            Object[] cabeceras = new Object[numero_columnas];

            for (int i = 0; i < numero_columnas; i++)
            {
                String cabeceras_bd = metadatos.getColumnLabel(i + 1); 
                if(cabeceras_bd.equals("nombre"))
                {
                    cabeceras[i] = "NOMBRE";                    
                }
                if(cabeceras_bd.equals("descripcion"))
                {
                    cabeceras[i] = "DESCRIPCIÓN";
                }
                if(cabeceras_bd.equals("nivel"))
                {
                    cabeceras[i] = "NIVEL";
                }
                if(cabeceras_bd.equals("precio"))
                {
                    cabeceras[i] = "PRECIO";
                }
                if(cabeceras_bd.equals("duracion"))
                {
                    cabeceras[i] = "DURACIÓN";
                }
                if(cabeceras_bd.equals("fechaalta"))
                {
                    cabeceras[i] = "FECHA ALTA";
                }
                if(cabeceras_bd.equals("fechabaja"))
                {
                    cabeceras[i] = "FECHA BAJA";
                }
            }

            model.setColumnIdentifiers(cabeceras);
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(ListadoCursos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private static void anadeDatosTabla(ResultSet rs, DefaultTableModel model)
    {
        int numero_fila = 0;
        try
        {
            while (rs.next())
            {
                Object[] datos_fila = new Object[model.getColumnCount()];
                
                for (int i = 0; i < model.getColumnCount(); i++)
                {
                    datos_fila[i] = rs.getObject(i + 1);
                }
                
                model.addRow(datos_fila);
                numero_fila++;
            }
            
        } catch (Exception e)
        {
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListadoCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListadoCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListadoCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListadoCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListadoCursos dialog = new ListadoCursos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAnadirCurso;
    private javax.swing.JButton BotonDetalleCurso;
    private javax.swing.JButton BotonEliminarCurso;
    private javax.swing.JButton BotonVolver;
    private javax.swing.JPanel BotoneraInferior;
    private javax.swing.JPanel Buscador;
    private javax.swing.JScrollPane TablaCursos;
    private javax.swing.JComboBox<String> comboBusqueda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCursos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable jTableCursos;
    private javax.swing.JTextField textoBusqueda;
    // End of variables declaration//GEN-END:variables
}
