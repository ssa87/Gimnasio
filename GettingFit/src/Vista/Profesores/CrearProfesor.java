package Vista.Profesores;

import Modelo.Conexion;
import Vista.Principal;
import java.sql.Array;
import java.util.Date;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class CrearProfesor extends javax.swing.JDialog {
    
    /*Se crea una variable para hacer la conexión con la pantalla Principal*/
    private Principal principal;
    private ListadoProfesores listado;
    
    /**
     * Creates new form CrearProfesor
     */
    public CrearProfesor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        /*Se hace la conexión con la pantalla Principal*/
        principal = (Principal)parent;
        initComponents();
        /*Centramos la ventana del diálogo CrearProfesor*/
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        ContenidoCrearProfesor = new javax.swing.JPanel();
        NombreProfesor = new javax.swing.JLabel();
        ApellidosProfesor = new javax.swing.JLabel();
        DniProfesor = new javax.swing.JLabel();
        FechaNacProfesor = new javax.swing.JLabel();
        SexoProfesor = new javax.swing.JLabel();
        TelefonoProfesor = new javax.swing.JLabel();
        DireccionProfesor = new javax.swing.JLabel();
        FechaAltaProfesor = new javax.swing.JLabel();
        FechaBajaProfesor = new javax.swing.JLabel();
        TextoApellido1Profesor = new javax.swing.JTextField();
        TextoTelefonoProfesor = new javax.swing.JTextField();
        TextoDniProfesor = new javax.swing.JTextField();
        TextoNombreProfesor = new javax.swing.JTextField();
        TextoDireccionProfesor = new javax.swing.JTextField();
        ComboSexo = new javax.swing.JComboBox<>();
        FechaNacimiento = new com.toedter.calendar.JDateChooser();
        FechaAlta = new com.toedter.calendar.JDateChooser();
        FechaBaja = new com.toedter.calendar.JDateChooser();
        ApellidosProfesor1 = new javax.swing.JLabel();
        TextoApellido2Profesor = new javax.swing.JTextField();
        BotoneraInferior = new javax.swing.JPanel();
        CancelarProfesor = new javax.swing.JButton();
        CrearProfesor = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabelCrearProfesor = new javax.swing.JLabel();

        ContenidoCrearProfesor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        NombreProfesor.setText("Nombre");

        ApellidosProfesor.setText("Primer apellido");

        DniProfesor.setText("DNI");

        FechaNacProfesor.setText("Fecha Nacimiento");

        SexoProfesor.setText("Sexo");

        TelefonoProfesor.setText("Teléfono");

        DireccionProfesor.setText("Dirección");

        FechaAltaProfesor.setText("Fecha Alta");

        FechaBajaProfesor.setText("Fecha Baja");

        ComboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mujer", "Hombre" }));

        ApellidosProfesor1.setText("Segundo apellido");

        javax.swing.GroupLayout ContenidoCrearProfesorLayout = new javax.swing.GroupLayout(ContenidoCrearProfesor);
        ContenidoCrearProfesor.setLayout(ContenidoCrearProfesorLayout);
        ContenidoCrearProfesorLayout.setHorizontalGroup(
            ContenidoCrearProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContenidoCrearProfesorLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(ContenidoCrearProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ContenidoCrearProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(TextoApellido1Profesor)
                        .addComponent(TextoNombreProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(NombreProfesor)
                        .addComponent(ApellidosProfesor))
                    .addGroup(ContenidoCrearProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(TextoApellido2Profesor, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                        .addComponent(ApellidosProfesor1))
                    .addComponent(DniProfesor)
                    .addComponent(TextoDniProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextoTelefonoProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TelefonoProfesor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addGroup(ContenidoCrearProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SexoProfesor)
                    .addComponent(FechaNacProfesor)
                    .addComponent(FechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FechaAltaProfesor)
                    .addComponent(FechaAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FechaBajaProfesor)
                    .addComponent(FechaBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DireccionProfesor)
                    .addComponent(TextoDireccionProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );
        ContenidoCrearProfesorLayout.setVerticalGroup(
            ContenidoCrearProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContenidoCrearProfesorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ContenidoCrearProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NombreProfesor)
                    .addComponent(DireccionProfesor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ContenidoCrearProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextoNombreProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextoDireccionProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ContenidoCrearProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ContenidoCrearProfesorLayout.createSequentialGroup()
                        .addComponent(ApellidosProfesor)
                        .addGap(7, 7, 7)
                        .addComponent(TextoApellido1Profesor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ApellidosProfesor1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextoApellido2Profesor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DniProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextoDniProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(TelefonoProfesor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextoTelefonoProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ContenidoCrearProfesorLayout.createSequentialGroup()
                        .addComponent(SexoProfesor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ContenidoCrearProfesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ContenidoCrearProfesorLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(FechaNacProfesor))
                            .addComponent(ComboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addComponent(FechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(11, 11, 11)
                        .addComponent(FechaAltaProfesor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FechaAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FechaBajaProfesor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FechaBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );

        CancelarProfesor.setText("Cancelar");
        CancelarProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarProfesorActionPerformed(evt);
            }
        });

        CrearProfesor.setText("Crear");
        CrearProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearProfesorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BotoneraInferiorLayout = new javax.swing.GroupLayout(BotoneraInferior);
        BotoneraInferior.setLayout(BotoneraInferiorLayout);
        BotoneraInferiorLayout.setHorizontalGroup(
            BotoneraInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotoneraInferiorLayout.createSequentialGroup()
                .addContainerGap(294, Short.MAX_VALUE)
                .addComponent(CancelarProfesor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CrearProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        BotoneraInferiorLayout.setVerticalGroup(
            BotoneraInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotoneraInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(CancelarProfesor)
                .addComponent(CrearProfesor))
        );

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabelCrearProfesor.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabelCrearProfesor.setText("NUEVO PROFESOR");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(jLabelCrearProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelCrearProfesor, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BotoneraInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ContenidoCrearProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ContenidoCrearProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BotoneraInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelarProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarProfesorActionPerformed
        /*Programamos el retorno a la pantalla principal*/
        this.setVisible(false);
        new Principal().setVisible(true);
    }//GEN-LAST:event_CancelarProfesorActionPerformed

    private void CrearProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearProfesorActionPerformed
        
        try 
        {
            /*Recogemos toda la información introducida del profesor a crear*/
            String nombre_profesor = TextoNombreProfesor.getText().trim();
            String apellido1_profesor = TextoApellido1Profesor.getText().trim();
            String apellido2_profesor = TextoApellido2Profesor.getText().trim();
            String dni_profesor = TextoDniProfesor.getText().trim();
            String telefono_profesor = TextoTelefonoProfesor.getText().trim();
            String direccion_profesor = TextoDireccionProfesor.getText().trim();
            String sexo_profesor = (String)ComboSexo.getSelectedItem();
            String fechaNacimiento_profesor = formateaFecha(FechaNacimiento.getDate()).trim();
            String fechaAlta_profesor = formateaFecha(FechaAlta.getDate()).trim();
            String fechaBaja_profesor = formateaFecha(FechaBaja.getDate()).trim();
            
            /*Abrimos conexión con la base de datos*/
            Connection conexion = Conexion.conexionPostgresql();
            ResultSet dnis_profesores_bd = conexion.createStatement().executeQuery("select Dni from Profesores");
            ArrayList<String> array_dnis = new ArrayList<String>();
            while(dnis_profesores_bd.next())
            {
                String columna_dni_bd = dnis_profesores_bd.getString(1);
                array_dnis.add(columna_dni_bd);                
            }
            
            /*Comprobamos que los valores de entrada no sean nulos. Únicamente puede ser nulo fechaBaja_profesor*/
            if(nombre_profesor.isEmpty() || nombre_profesor.equals(""))
            {
                JOptionPane.showMessageDialog(null,"El campo nombre es obligatorio");
                return;
            }
            if(apellido1_profesor.isEmpty() || apellido1_profesor.equals(""))
            {
                JOptionPane.showMessageDialog(null,"El campo primer apellido es obligatorio");
                return;
            }
            if(apellido2_profesor.isEmpty() || apellido2_profesor.equals(""))
            {
                JOptionPane.showMessageDialog(null,"El campo segundo apellido es obligatorio");
                return;
            }
            if(dni_profesor.isEmpty() || dni_profesor.equals(""))
            {
                JOptionPane.showMessageDialog(null,"El campo Dni es obligatorio");
                return;  
            }
            if(dni_profesor.length() != 9)
            {
                JOptionPane.showMessageDialog(null, "El Dni introducido no es válido", null, JOptionPane.ERROR_MESSAGE);
                return;
            }
            for (String dni: array_dnis)
            {
                if(dni_profesor.equals(dni))
                {
                    JOptionPane.showMessageDialog(null, "Ya existe en el sistema un usuario dado de alta con ese dni", null, JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            if(telefono_profesor.isEmpty() || telefono_profesor.equals(""))
            {
                JOptionPane.showMessageDialog(null,"El campo teléfono es obligatorio");
                return;
            }

            if(telefono_profesor.length() != 9)
            {
                JOptionPane.showMessageDialog(null, "El teléfono introducido no es válido", null, JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(direccion_profesor.isEmpty() || direccion_profesor.equals(""))
            {
                JOptionPane.showMessageDialog(null,"El campo dirección es obligatorio");
                return;
            }
            if(fechaNacimiento_profesor.isEmpty() || fechaNacimiento_profesor.equals(""))
            {
                JOptionPane.showMessageDialog(null,"El campo fecha de nacimiento es obligatorio");
                return;
            }
            if(fechaAlta_profesor.isEmpty() || fechaAlta_profesor.equals(""))
            {
                JOptionPane.showMessageDialog(null,"El campo fecha de alta es obligatorio");
                return;
            }
            
            /*Añadimos el nuevo profesor*/
            Statement sentencia = conexion.createStatement();
            ResultSet id = sentencia.executeQuery("select max(id) from Profesores");
            int max_id_profesor = 0;
            while(id.next())
            {
                max_id_profesor = id.getInt(1);
            }
            String inserta_profesor = "";
            if (fechaBaja_profesor.equals(""))
            {
                inserta_profesor = "insert into Profesores values (" + (max_id_profesor+1) + ",'"+nombre_profesor+"','"+apellido1_profesor+"','"+apellido2_profesor+"','"+dni_profesor+"','"+fechaNacimiento_profesor+"','"+sexo_profesor+"',"+Integer.parseInt(telefono_profesor)+",'"+direccion_profesor+"','"+fechaAlta_profesor+"')";
            } 
            else
            {
                inserta_profesor = "insert into Profesores values (" + (max_id_profesor+1) + ",'"+nombre_profesor+"','"+apellido1_profesor+"','"+apellido2_profesor+"','"+dni_profesor+"','"+fechaNacimiento_profesor+"','"+sexo_profesor+"',"+Integer.parseInt(telefono_profesor)+",'"+direccion_profesor+"','"+fechaAlta_profesor+"','"+fechaBaja_profesor+"')";
            }
            sentencia.execute(inserta_profesor);
            
            /*Cerramos la conexion*/
            sentencia.close();
            conexion.close();
            
            /*Se crea un objeto profesor*/
//            Profesor profesor = new Profesor
//                (nombre_profesor, apellido1_profesor, apellido2_profesor, dni_profesor, fechaNacimiento_profesor, sexo_profesor, 
//                Integer.parseInt(telefono_profesor), direccion_profesor, fechaAlta_profesor, fechaBaja_profesor);
            
            /*Con esta función se destruye el formulario*/
            dispose();
            /*Mostramos mensaje de éxito*/
            JOptionPane.showMessageDialog(null, "Operación realizada correctamente");
            
        } catch (SQLException ex) 
        {
            Logger.getLogger(CrearProfesor.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (NumberFormatException e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_CrearProfesorActionPerformed

    /*Método que transforma una fecha al formato "dd/MM/yyyy"*/
    public String formateaFecha (Date fecha)
    {   
        String fecha_bd = "";
        if(fecha == null)
        {
            String _fecha  = "";
            return _fecha;
        } 
        else
        {
            Calendar calendario = Calendar.getInstance();
            calendario.setTime(fecha);
            String dia = Integer.toString(calendario.get(Calendar.DAY_OF_MONTH));
            String mes = Integer.toString(calendario.get(Calendar.MONTH) + 1);
            String anio = Integer.toString(calendario.get(Calendar.YEAR));
            fecha_bd = dia + "/" + mes + "/" + anio;  
            return fecha_bd;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CrearProfesor dialog = new CrearProfesor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ApellidosProfesor;
    private javax.swing.JLabel ApellidosProfesor1;
    private javax.swing.JPanel BotoneraInferior;
    private javax.swing.JButton CancelarProfesor;
    private javax.swing.JComboBox<String> ComboSexo;
    private javax.swing.JPanel ContenidoCrearProfesor;
    private javax.swing.JButton CrearProfesor;
    private javax.swing.JLabel DireccionProfesor;
    private javax.swing.JLabel DniProfesor;
    private com.toedter.calendar.JDateChooser FechaAlta;
    private javax.swing.JLabel FechaAltaProfesor;
    private com.toedter.calendar.JDateChooser FechaBaja;
    private javax.swing.JLabel FechaBajaProfesor;
    private javax.swing.JLabel FechaNacProfesor;
    private com.toedter.calendar.JDateChooser FechaNacimiento;
    private javax.swing.JLabel NombreProfesor;
    private javax.swing.JLabel SexoProfesor;
    private javax.swing.JLabel TelefonoProfesor;
    private javax.swing.JTextField TextoApellido1Profesor;
    private javax.swing.JTextField TextoApellido2Profesor;
    private javax.swing.JTextField TextoDireccionProfesor;
    private javax.swing.JTextField TextoDniProfesor;
    private javax.swing.JTextField TextoNombreProfesor;
    private javax.swing.JTextField TextoTelefonoProfesor;
    private javax.swing.JLabel jLabelCrearProfesor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
